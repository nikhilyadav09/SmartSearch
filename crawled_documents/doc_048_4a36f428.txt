In data analysis, cosine similarity is a measure of similarity between two non-zero vectors defined in an inner product space. Cosine similarity is the cosine of the angle between the vectors; that is, it is the dot product of the vectors divided by the product of their lengths. It follows that the cosine similarity does not depend on the magnitudes of the vectors, but only on their angle. The cosine similarity always belongs to the interval [ − 1 , + 1 ] . {\displaystyle [-1,+1].} For example, two proportional vectors have a cosine similarity of +1, two orthogonal vectors have a similarity of 0, and two opposite vectors have a similarity of −1. In some contexts, the component values of the vectors cannot be negative, in which case the cosine similarity is bounded in [ 0 , 1 ] {\displaystyle [0,1]} . For example, in information retrieval and text mining, each word is assigned a different coordinate and a document is represented by the vector of the numbers of occurrences of each word in the document. Cosine similarity then gives a useful measure of how similar two documents are likely to be, in terms of their subject matter, and independently of the length of the documents.[1] The technique is also used to measure cohesion within clusters in the field of data mining.[2] One advantage of cosine similarity is its low complexity, especially for sparse vectors: only the non-zero coordinates need to be considered. Other names for cosine similarity include Orchini similarity and Tucker coefficient of congruence; the Otsuka–Ochiai similarity (see below) is cosine similarity applied to binary data.[3] Definition The cosine of two non-zero vectors can be derived by using the Euclidean dot product formula: Given two n-dimensional vectors of attributes, A and B, the cosine similarity, cos(θ), is represented using a dot product and magnitude as where A i {\displaystyle A_{i}} and B i {\displaystyle B_{i}} are the i {\displaystyle i} th components of vectors A {\displaystyle \mathbf {A} } and B {\displaystyle \mathbf {B} } , respectively. The resulting similarity ranges from −1 meaning exactly opposite, to +1 meaning exactly the same, with 0 indicating orthogonality or decorrelation, while in-between values indicate intermediate similarity or dissimilarity. For text matching, the attribute vectors A and B are usually the term frequency vectors of the documents. Cosine similarity can be seen as a method of normalizing document length during comparison. In the case of information retrieval, the cosine similarity of two documents will range from 0 → 1 {\displaystyle 0\to 1} , since the term frequencies cannot be negative. This remains true when using TF-IDF weights. The angle between two term frequency vectors cannot be greater than 90°. If the attribute vectors are normalized by subtracting the vector means (e.g., A − A ¯ {\displaystyle A-{\bar {A}}} ), the measure is called the centered cosine similarity and is equivalent to the Pearson correlation coefficient. For an example of centering, Cosine distance When the distance between two unit-length vectors is defined to be the length of their vector difference then dist ⁡ ( A , B ) = ( A − B ) ⋅ ( A − B ) = A ⋅ A − 2 ( A ⋅ B ) + B ⋅ B = 2 ( 1 − S C ( A , B ) ) . {\displaystyle \operatorname {dist} (\mathbf {A} ,\mathbf {B} )={\sqrt {(\mathbf {A} -\mathbf {B} )\cdot (\mathbf {A} -\mathbf {B} )}}={\sqrt {\mathbf {A} \cdot \mathbf {A} -2(\mathbf {A} \cdot \mathbf {B} )+\mathbf {B} \cdot \mathbf {B} }}={\sqrt {2(1-S_{C}(\mathbf {A} ,\mathbf {B} ))}}\,.} Nonetheless the cosine distance[4] is often defined without the square root or factor of 2: It is important to note that, by virtue of being proportional to squared Euclidean distance, the cosine distance is not a true distance metric; it does not exhibit the triangle inequality property — or, more formally, the Schwarz inequality — and it violates the coincidence axiom. To repair the triangle inequality property while maintaining the same ordering, one can convert to Euclidean distance 2 ( 1 − S C ( A , B ) ) {\textstyle {\sqrt {2(1-S_{C}(A,B))}}} or angular distance θ = arccos(SC(A, B)). Alternatively, the triangular inequality that does work for angular distances can be expressed directly in terms of the cosines; see below. Angular distance and similarity The normalized angle, referred to as angular distance, between any two vectors A {\displaystyle A} and B {\displaystyle B} is a formal distance metric and can be calculated from the cosine similarity.[5] The complement of the angular distance metric can then be used to define angular similarity function bounded between 0 and 1, inclusive. When the vector elements may be positive or negative: Or, if the vector elements are always positive: Unfortunately, computing the inverse cosine (arccos) function is slow, making the use of the angular distance more computationally expensive than using the more common (but not metric) cosine distance above. L2-normalized Euclidean distance Another effective proxy for cosine distance can be obtained by L 2 {\displaystyle L_{2}} normalisation of the vectors, followed by the application of normal Euclidean distance. Using this technique each term in each vector is first divided by the magnitude of the vector, yielding a vector of unit length. Then the Euclidean distance over the end-points of any two vectors is a proper metric which gives the same ordering as the cosine distance (a monotonic transformation of Euclidean distance; see below) for any comparison of vectors, and furthermore avoids the potentially expensive trigonometric operations required to yield a proper metric. Once the normalisation has occurred, the vector space can be used with the full range of techniques available to any Euclidean space, notably standard dimensionality reduction techniques. This normalised form distance is often used within many deep learning algorithms. Otsuka–Ochiai coefficient In biology, there is a similar concept known as the Otsuka–Ochiai coefficient named after Yanosuke Otsuka (also spelled as Ōtsuka, Ootsuka or Otuka,[6] Japanese: 大塚 弥之助)[7] and Akira Ochiai (Japanese: 落合 明),[8] also known as the Ochiai–Barkman[9] or Ochiai coefficient,[10] which can be represented as: Here, A {\displaystyle A} and B {\displaystyle B} are sets, and | A | {\displaystyle |A|} is the number of elements in A {\displaystyle A} . If sets are represented as bit vectors, the Otsuka–Ochiai coefficient can be seen to be the same as the cosine similarity. It is identical to the score introduced by Godfrey Thomson.[11] In a recent book,[12] the coefficient is tentatively misattributed to another Japanese researcher with the family name Otsuka. The confusion arises because in 1957 Akira Ochiai attributes the coefficient only to Otsuka (no first name mentioned)[8] by citing an article by Ikuso Hamai (Japanese: 浜井 生三),[13] who in turn cites the original 1936 article by Yanosuke Otsuka.[7] Properties The most noteworthy property of cosine similarity is that it reflects a relative, rather than absolute, comparison of the individual vector dimensions. For any positive constant a {\displaystyle a} and vector V {\displaystyle V} , the vectors V {\displaystyle V} and a V {\displaystyle aV} are maximally similar. The measure is thus most appropriate for data where frequency is more important than absolute values; notably, term frequency in documents. However more recent metrics with a grounding in information theory, such as Jensen–Shannon, SED, and triangular divergence have been shown to have improved semantics in at least some contexts. [14] Cosine similarity is related to Euclidean distance as follows. Denote Euclidean distance by the usual ‖ A − B ‖ {\displaystyle \|A-B\|} , and observe that by expansion. When A and B are normalized to unit length, ‖ A ‖ 2 = ‖ B ‖ 2 = 1 {\displaystyle \|A\|^{2}=\|B\|^{2}=1} so this expression is equal to In short, the cosine distance can be expressed in terms of Euclidean distance as The Euclidean distance is called the chord distance (because it is the length of the chord on the unit circle) and it is the Euclidean distance between the vectors which were normalized to unit sum of squared values within them. Null distribution: For data which can be negative as well as positive, the null distribution for cosine similarity is the distribution of the dot product of two independent random unit vectors. This distribution has a mean of zero and a variance of 1 / n {\displaystyle 1/n} (where n {\displaystyle n} is the number of dimensions), and although the distribution is bounded between −1 and +1, as n {\displaystyle n} grows large the distribution is increasingly well-approximated by the normal distribution.[15][16] Other types of data such as bitstreams, which only take the values 0 or 1, the null distribution takes a different form and may have a nonzero mean.[17] Triangle inequality for cosine similarity The ordinary triangle inequality for angles (i.e., arc lengths on a unit hypersphere) gives us that Because the cosine function decreases as an angle in [0, π] radians increases, the sense of these inequalities is reversed when we take the cosine of each value: Using the cosine addition and subtraction formulas, these two inequalities can be written in terms of the original cosines, This form of the triangle inequality can be used to bound the minimum and maximum similarity of two objects A and B if the similarities to a reference object C is already known. This is used for example in metric data indexing, but has also been used to accelerate spherical k-means clustering[18] the same way the Euclidean triangle inequality has been used to accelerate regular k-means. Soft cosine measure A soft cosine or ("soft" similarity) between two vectors considers similarities between pairs of features.[19] The traditional cosine similarity considers the vector space model (VSM) features as independent or completely different, while the soft cosine measure proposes considering the similarity of features in VSM, which help generalize the concept of cosine (and soft cosine) as well as the idea of (soft) similarity. For example, in the field of natural language processing (NLP) the similarity among features is quite intuitive. Features such as words, n-grams, or syntactic n-grams[20] can be quite similar, though formally they are considered as different features in the VSM. For example, words "play" and "game" are different words and thus mapped to different points in VSM; yet they are semantically related. In case of n-grams or syntactic n-grams, Levenshtein distance can be applied (in fact, Levenshtein distance can be applied to words as well). For calculating soft cosine, the matrix s is used to indicate similarity between features. It can be calculated through Levenshtein distance, WordNet similarity, or other similarity measures. Then we just multiply by this matrix. Given two N-dimension vectors a {\displaystyle a} and b {\displaystyle b} , the soft cosine similarity is calculated as follows: where sij = similarity(featurei, featurej). If there is no similarity between features (sii = 1, sij = 0 for i ≠ j), the given equation is equivalent to the conventional cosine similarity formula. The time complexity of this measure is quadratic, which makes it applicable to real-world tasks. Note that the complexity can be reduced to subquadratic.[21] An efficient implementation of such soft cosine similarity is included in the Gensim open source library. See also References External links